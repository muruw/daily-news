{"version":3,"sources":["components/Navbar.js","apollo.js","components/Article.js","components/ArticleFeed.js","components/App.js","index.js"],"names":["Navbar","react_default","a","createElement","className","apollo","ApolloClient","uri","Article","_ref","data","isSmall","href","url","target","src","urlToImage","alt","source","name","title","query","gql","_templateObject","ArticleFeed","_useState","useState","_useState2","Object","slicedToArray","setData","client","then","response","articles","catch","error","console","log","map","article","index","components_Article","key","App","Fragment","components_Navbar","components_ArticleFeed","ReactDOM","render","components_App","document","getElementById"],"mappings":"8LAMeA,SAJA,WACb,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,gCCDMC,EAAA,UAAIC,GAAa,CAC9BC,IAAK,oCCaQC,EAdC,SAAAC,GAAuB,IAApBC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,QACvB,OACEV,EAAAC,EAAAC,cAAA,KACES,KAAMF,EAAKG,IACXC,OAAO,SACPV,UAAWO,EAAU,yBAA2B,WAEhDV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBW,IAAKL,EAAKM,WAAYC,IAAI,KAC1DhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBM,EAAKQ,OAAOC,MAC9ClB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBM,EAAKU,wMCL5C,IAAMC,QAAQC,GAAHC,KA0CIC,EA7BK,WAAM,IAAAC,EACAC,mBAAS,IADTC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACjBf,EADiBiB,EAAA,GACXG,EADWH,EAAA,GAQxB,OALAI,EACGV,MAAM,CAAEA,UACRW,KAAK,SAAAC,GAAQ,OAAIH,EAAQG,EAASvB,KAAKwB,YACvCC,MAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,KAG5BnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACZM,EAAK6B,IAAI,SAACC,EAASC,GAAV,OACRxC,EAAAC,EAAAC,cAACuC,EAAD,CACE/B,SACG8B,EAAQ,GAAK,IAAM,IACnBA,EAAQ,GAAK,IAAM,IACnBA,EAAQ,GAAK,IAAM,EAEtB/B,KAAM8B,EACNG,IAAKF,MAITxC,EAAAC,EAAAC,cAAA,KAAGS,KAAK,wBAAwBE,OAAO,UAAvC,yBC1BS8B,EATH,WACV,OACE3C,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2C,SAAA,KACE5C,EAAAC,EAAAC,cAAC2C,EAAD,MACA7C,EAAAC,EAAAC,cAAC4C,EAAD,QCLNC,IAASC,OAAOhD,EAAAC,EAAAC,cAAC+C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.b644885e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Navbar = () => {\r\n  return <div className=\"navbar\">DAILY NEWS</div>;\r\n};\r\n\r\nexport default Navbar;\r\n","import ApolloClient from \"apollo-boost\";\r\n\r\nexport default new ApolloClient({\r\n  uri: \"https://mrtns.ee/graphql\"\r\n});\r\n","import React from \"react\";\r\n\r\nconst Article = ({ data, isSmall }) => {\r\n  return (\r\n    <a\r\n      href={data.url}\r\n      target=\"_blank\"\r\n      className={isSmall ? \"article article--small\" : \"article\"}\r\n    >\r\n      <img className=\"article__image\" src={data.urlToImage} alt=\"\" />\r\n      <div className=\"article__source\">{data.source.name}</div>\r\n      <div className=\"article__title\">{data.title}</div>\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default Article;\r\n","import React, { useState } from \"react\";\r\nimport client from \"../apollo\";\r\nimport gql from \"graphql-tag\";\r\n\r\nimport Article from \"./Article\";\r\n\r\nconst query = gql`\r\n  query {\r\n    articles {\r\n      title\r\n      source {\r\n        name\r\n      }\r\n      urlToImage\r\n      url\r\n    }\r\n  }\r\n`;\r\n\r\nconst ArticleFeed = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  client\r\n    .query({ query })\r\n    .then(response => setData(response.data.articles))\r\n    .catch(error => console.log(error));\r\n\r\n  return (\r\n    <div className=\"feed\">\r\n      {data.map((article, index) => (\r\n        <Article\r\n          isSmall={\r\n            (index + 1) % 5 === 0 ||\r\n            (index + 2) % 5 === 0 ||\r\n            (index + 3) % 5 === 0\r\n          }\r\n          data={article}\r\n          key={index}\r\n        />\r\n      ))}\r\n\r\n      <a href=\"https://newsapi.org/ \" target=\"_blank\">\r\n        Made with news api!\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArticleFeed;\r\n","import React from \"react\";\n\n// Components\nimport Navbar from \"./Navbar\";\nimport ArticleFeed from \"./ArticleFeed\";\n\nconst App = () => {\n  return (\n    <>\n      <Navbar />\n      <ArticleFeed />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/style.scss\";\n\nimport App from \"./components/App\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}